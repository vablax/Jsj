-- Touch Soccer Script Hub
-- Features auto goal, player ESP, ball ESP, power kicks, and more
-- Place in StarterPlayerScripts

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local GuiService = game:GetService("GuiService")

local player = Players.LocalPlayer
local camera = workspace.CurrentCamera
local mouse = player:GetMouse()

-- Configuration
local config = {
    -- General Settings
    Enabled = true,
    ToggleKey = Enum.KeyCode.RightControl, -- Press right ctrl to toggle script hub
    
    -- Auto Goal Settings
    AutoGoalEnabled = false,
    AutoGoalKey = Enum.KeyCode.G,
    AutoGoalDistance = 30, -- Distance at which auto goal activates
    AutoGoalPower = 100,   -- Kick power for auto goal (0-100)
    AutoGoalDelay = 0.2,   -- Delay between checks
    OpponentGoalOnly = true, -- Only auto goal toward opponent's goal
    
    -- ESP Settings
    ESPEnabled = true,
    ESPToggleKey = Enum.KeyCode.E,
    PlayerESP = true,
    BallESP = true,
    GoalESP = true,
    ESPBoxColor = Color3.fromRGB(255, 255, 255),
    ESPBallColor = Color3.fromRGB(255, 255, 0),
    ESPGoalColor = Color3.fromRGB(0, 255, 0),
    ESPBoxTransparency = 0.5,
    ESPBoxThickness = 2,
    
    -- Power Kick Settings
    PowerKickEnabled = false,
    PowerKickKey = Enum.KeyCode.X,
    PowerKickMultiplier = 2.5, -- How much stronger your kicks are
    AlwaysPowerKick = false,   -- Always use power kick
    
    -- Auto Pass Settings
    AutoPassEnabled = false,
    AutoPassKey = Enum.KeyCode.C,
    AutoPassDistance = 20,     -- Distance to teammates for auto pass
    
    -- Ball Magnet Settings
    BallMagnetEnabled = false,
    BallMagnetKey = Enum.KeyCode.V,
    BallMagnetStrength = 5,    -- Strength of the ball magnet
    
    -- Mobile Button Settings
    MobileButtonSize = UDim2.new(0, 50, 0, 50),
    MobileButtonColor = Color3.fromRGB(200, 200, 200),
    MobileButtonActiveColor = Color3.fromRGB(0, 200, 0),
    MobileButtonTransparency = 0.3
}

-- Variables
local isMobile = GuiService:IsTenFootInterface() or UserInputService.TouchEnabled
local scripts = {
    AutoGoal = {enabled = config.AutoGoalEnabled},
    ESP = {enabled = config.ESPEnabled},
    PowerKick = {enabled = config.PowerKickEnabled},
    AutoPass = {enabled = config.AutoPassEnabled},
    BallMagnet = {enabled = config.BallMagnetEnabled}
}
local espObjects = {}
local ballObject = nil
local goalObjects = {red = nil, blue = nil}
local ballLastPosition = nil
local myTeam = nil
local lastAutoGoalTime = 0

-- Helper functions to find important game objects
local function findBall()
    -- Look for the soccer ball in workspace
    for _, obj in pairs(workspace:GetChildren()) do
        if obj:IsA("BasePart") and 
           (obj.Name:lower():find("ball") or obj.Name:lower():find("soccer")) then
            return obj
        end
    end
    
    -- If not found directly, search more extensively
    for _, obj in pairs(workspace:GetDescendants()) do
        if obj:IsA("BasePart") and 
           (obj.Name:lower():find("ball") or obj.Name:lower():find("soccer")) then
            return obj
        end
    end
    
    return nil
end

local function findGoals()
    local goals = {red = nil, blue = nil}
    
    -- Look for goals in workspace
    for _, obj in pairs(workspace:GetDescendants()) do
        if obj:IsA("BasePart") and obj.Name:lower():find("goal") then
            -- Determine team based on color or name
            if obj.BrickColor.Name:lower():find("red") or obj.Name:lower():find("red") then
                goals.red = obj
            elseif obj.BrickColor.Name:lower():find("blue") or obj.Name:lower():find("blue") then
                goals.blue = obj
            end
        end
    end
    
    return goals
end

local function determineMyTeam()
    local myCharacter = player.Character
    if not myCharacter then return nil end
    
    -- Try to determine team from character color
    for _, part in pairs(myCharacter:GetChildren()) do
        if part:IsA("BasePart") and part.Name == "Torso" or part.Name == "UpperTorso" then
            local color = part.BrickColor.Name:lower()
            if color:find("red") then
                return "red"
            elseif color:find("blue") then
                return "blue"
            end
        end
    end
    
    -- Try to determine from player's team
    if player.Team then
        local teamName = player.Team.Name:lower()
        if teamName:find("red") then
            return "red"
        elseif teamName:find("blue") then
            return "blue"
        end
    end
    
    return nil
end

local function getOpponentGoal()
    if not myTeam then
        myTeam = determineMyTeam()
    end
    
    if myTeam == "red" then
        return goalObjects.blue
    elseif myTeam == "blue" then
        return goalObjects.red
    end
    
    -- If team can't be determined, return both goals
    return {goalObjects.red, goalObjects.blue}
end

-- Create the script hub UI
local function createScriptHubUI()
    local hubGui = Instance.new("ScreenGui")
    hubGui.Name = "TouchSoccerScriptHub"
    hubGui.ResetOnSpawn = false
    hubGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    -- Make sure GUI works in Core and PlayerGui
    if syn and syn.protect_gui then
        syn.protect_gui(hubGui)
        hubGui.Parent = game.CoreGui
    else
        hubGui.Parent = player:WaitForChild("PlayerGui")
    end
    
    -- Create the main frame
    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.Size = UDim2.new(0, 250, 0, 300)
    mainFrame.Position = UDim2.new(0.85, -125, 0.5, -150)
    mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    mainFrame.BackgroundTransparency = 0.2
    mainFrame.BorderSizePixel = 0
    mainFrame.Active = true
    mainFrame.Draggable = true
    mainFrame.Visible = false -- Hidden by default
    mainFrame.Parent = hubGui
    
    -- Add corner radius
    local mainCorner = Instance.new("UICorner")
    mainCorner.CornerRadius = UDim.new(0, 10)
    mainCorner.Parent = mainFrame
    
    -- Create title
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Name = "TitleLabel"
    titleLabel.Size = UDim2.new(1, 0, 0, 30)
    titleLabel.Position = UDim2.new(0, 0, 0, 0)
    titleLabel.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    titleLabel.BackgroundTransparency = 0.2
    titleLabel.Text = "Touch Soccer Hub"
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.TextSize = 18
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.Parent = mainFrame
    
    -- Add corner radius to title
    local titleCorner = Instance.new("UICorner")
    titleCorner.CornerRadius = UDim.new(0, 10)
    titleCorner.Parent = titleLabel
    
    -- Create a list layout for script toggles
    local listLayout = Instance.new("UIListLayout")
    listLayout.Padding = UDim.new(0, 8)
    listLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    listLayout.SortOrder = Enum.SortOrder.LayoutOrder
    listLayout.Parent = mainFrame
    
    -- Create toggles for each script
    local toggleButtons = {}
    local yOffset = 40
    
    local scriptNames = {
        "Auto Goal",
        "ESP Features",
        "Power Kick",
        "Auto Pass",
        "Ball Magnet"
    }
    
    local scriptKeys = {
        "AutoGoal",
        "ESP",
        "PowerKick",
        "AutoPass",
        "BallMagnet"
    }
    
    for i, scriptName in ipairs(scriptNames) do
        local scriptKey = scriptKeys[i]
        
        -- Create toggle frame
        local toggleFrame = Instance.new("Frame")
        toggleFrame.Name = scriptKey .. "Toggle"
        toggleFrame.Size = UDim2.new(0.9, 0, 0, 40)
        toggleFrame.Position = UDim2.new(0.05, 0, 0, yOffset)
        toggleFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        toggleFrame.BackgroundTransparency = 0.2
        toggleFrame.BorderSizePixel = 0
        toggleFrame.LayoutOrder = i
        toggleFrame.Parent = mainFrame
        
        -- Add corner radius
        local toggleCorner = Instance.new("UICorner")
        toggleCorner.CornerRadius = UDim.new(0, 8)
        toggleCorner.Parent = toggleFrame
        
        -- Add text label
        local toggleLabel = Instance.new("TextLabel")
        toggleLabel.Name = "Label"
        toggleLabel.Size = UDim2.new(0.7, 0, 1, 0)
        toggleLabel.Position = UDim2.new(0, 10, 0, 0)
        toggleLabel.BackgroundTransparency = 1
        toggleLabel.Text = scriptName
        toggleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        toggleLabel.TextSize = 16
        toggleLabel.Font = Enum.Font.Gotham
        toggleLabel.TextXAlignment = Enum.TextXAlignment.Left
        toggleLabel.Parent = toggleFrame
        
        -- Add toggle button
        local toggleButton = Instance.new("TextButton")
        toggleButton.Name = "Button"
        toggleButton.Size = UDim2.new(0, 50, 0, 24)
        toggleButton.Position = UDim2.new(1, -60, 0.5, -12)
        toggleButton.BackgroundColor3 = scripts[scriptKey].enabled and 
                                        Color3.fromRGB(0, 170, 0) or 
                                        Color3.fromRGB(170, 0, 0)
        toggleButton.Text = scripts[scriptKey].enabled and "ON" or "OFF"
        toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        toggleButton.TextSize = 14
        toggleButton.Font = Enum.Font.GothamBold
        toggleButton.BorderSizePixel = 0
        toggleButton.Parent = toggleFrame
        
        -- Add corner radius to button
        local buttonCorner = Instance.new("UICorner")
        buttonCorner.CornerRadius = UDim.new(0, 8)
        buttonCorner.Parent = toggleButton
        
        -- Add click handler
        toggleButton.MouseButton1Click:Connect(function()
            scripts[scriptKey].enabled = not scripts[scriptKey].enabled
            toggleButton.BackgroundColor3 = scripts[scriptKey].enabled and 
                                            Color3.fromRGB(0, 170, 0) or 
                                            Color3.fromRGB(170, 0, 0)
            toggleButton.Text = scripts[scriptKey].enabled and "ON" or "OFF"
            
            -- Additional logic based on script type
            if scriptKey == "ESP" then
                -- Update ESP visibility
                for _, espData in pairs(espObjects) do
                    if espData.Container then
                        espData.Container.Visible = scripts.ESP.enabled
                    end
                end
                if ballObject and ballObject.ESPContainer then
                    ballObject.ESPContainer.Visible = scripts.ESP.enabled
                end
                for _, goalData in pairs(goalObjects) do
                    if goalData and goalData.ESPContainer then
                        goalData.ESPContainer.Visible = scripts.ESP.enabled
                    end
                end
            end
            
            -- Provide feedback
            game.StarterGui:SetCore("SendNotification", {
                Title = scriptName,
                Text = scripts[scriptKey].enabled and "Enabled" or "Disabled",
                Duration = 1
            })
        end)
        
        toggleButtons[scriptKey] = toggleButton
        yOffset = yOffset + 50
    end
    
    -- Create mobile toggle button if on mobile
    local toggleHubButton
    if isMobile then
        toggleHubButton = Instance.new("ImageButton")
        toggleHubButton.Name = "ToggleHubButton"
        toggleHubButton.Size = UDim2.new(0, 60, 0, 60)
        toggleHubButton.Position = UDim2.new(0.1, 0, 0.5, 0)
        toggleHubButton.AnchorPoint = Vector2.new(0.5, 0.5)
        toggleHubButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        toggleHubButton.BackgroundTransparency = 0.3
        toggleHubButton.Image = "rbxassetid://3926307971"
        toggleHubButton.ImageRectOffset = Vector2.new(404, 364)
        toggleHubButton.ImageRectSize = Vector2.new(36, 36)
        toggleHubButton.ImageTransparency = 0.1
        toggleHubButton.Parent = hubGui
        
        -- Add rounded corners
        local buttonCorner = Instance.new("UICorner")
        buttonCorner.CornerRadius = UDim.new(1, 0)
        buttonCorner.Parent = toggleHubButton
        
        -- Add stroke for visibility
        local buttonStroke = Instance.new("UIStroke")
        buttonStroke.Thickness = 2
        buttonStroke.Color = Color3.fromRGB(255, 255, 255)
        buttonStroke.Transparency = 0.3
        buttonStroke.Parent = toggleHubButton
        
        -- Add text label
        local buttonLabel = Instance.new("TextLabel")
        buttonLabel.Name = "Label"
        buttonLabel.Size = UDim2.new(1, 0, 0.3, 0)
        buttonLabel.Position = UDim2.new(0, 0, 0.85, 0)
        buttonLabel.BackgroundTransparency = 1
        buttonLabel.Text = "MENU"
        buttonLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        buttonLabel.TextStrokeTransparency = 0
        buttonLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
        buttonLabel.TextSize = 14
        buttonLabel.Font = Enum.Font.GothamBold
        buttonLabel.Parent = toggleHubButton
        
        -- Toggle hub visibility on click
        toggleHubButton.MouseButton1Click:Connect(function()
            mainFrame.Visible = not mainFrame.Visible
        end)
    end
    
    -- Create an ESP container
    local espContainer = Instance.new("Folder")
    espContainer.Name = "ESPContainer"
    espContainer.Parent = hubGui
    
    return {
        HubGui = hubGui,
        MainFrame = mainFrame,
        ToggleButtons = toggleButtons,
        ToggleHubButton = toggleHubButton,
        ESPContainer = espContainer
    }
end

-- Create UI
local ui = createScriptHubUI()

-- Toggle script hub visibility (for PC)
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    
    if input.KeyCode == config.ToggleKey then
        ui.MainFrame.Visible = not ui.MainFrame.Visible
    end
    
    -- Individual toggles
    if input.KeyCode == config.AutoGoalKey then
        scripts.AutoGoal.enabled = not scripts.AutoGoal.enabled
        ui.ToggleButtons.AutoGoal.BackgroundColor3 = scripts.AutoGoal.enabled and 
                                                   Color3.fromRGB(0, 170, 0) or 
                                                   Color3.fromRGB(170, 0, 0)
        ui.ToggleButtons.AutoGoal.Text = scripts.AutoGoal.enabled and "ON" or "OFF"
        
        -- Provide feedback
        game.StarterGui:SetCore("SendNotification", {
            Title = "Auto Goal",
            Text = scripts.AutoGoal.enabled and "Enabled" or "Disabled",
            Duration = 1
        })
    end
    
    if input.KeyCode == config.ESPToggleKey then
        scripts.ESP.enabled = not scripts.ESP.enabled
        ui.ToggleButtons.ESP.BackgroundColor3 = scripts.ESP.enabled and 
                                              Color3.fromRGB(0, 170, 0) or 
                                              Color3.fromRGB(170, 0, 0)
        ui.ToggleButtons.ESP.Text = scripts.ESP.enabled and "ON" or "OFF"
        
        -- Update ESP visibility
        for _, espData in pairs(espObjects) do
            if espData.Container then
                espData.Container.Visible = scripts.ESP.enabled
            end
        end
        if ballObject and ballObject.ESPContainer then
            ballObject.ESPContainer.Visible = scripts.ESP.enabled
        end
        for _, goalData in pairs(goalObjects) do
            if goalData and goalData.ESPContainer then
                goalData.ESPContainer.Visible = scripts.ESP.enabled
            end
        end
        
        -- Provide feedback
        game.StarterGui:SetCore("SendNotification", {
            Title = "ESP Features",
            Text = scripts.ESP.enabled and "Enabled" or "Disabled",
            Duration = 1
        })
    end
    
    if input.KeyCode == config.PowerKickKey then
        scripts.PowerKick.enabled = not scripts.PowerKick.enabled
        ui.ToggleButtons.PowerKick.BackgroundColor3 = scripts.PowerKick.enabled and 
                                                    Color3.fromRGB(0, 170, 0) or 
                                                    Color3.fromRGB(170, 0, 0)
        ui.ToggleButtons.PowerKick.Text = scripts.PowerKick.enabled and "ON" or "OFF"
        
        -- Provide feedback
        game.StarterGui:SetCore("SendNotification", {
            Title = "Power Kick",
            Text = scripts.PowerKick.enabled and "Enabled" or "Disabled",
            Duration = 1
        })
    end
    
    if input.KeyCode == config.AutoPassKey then
        scripts.AutoPass.enabled = not scripts.AutoPass.enabled
        ui.ToggleButtons.AutoPass.BackgroundColor3 = scripts.AutoPass.enabled and 
                                                   Color3.fromRGB(0, 170, 0) or 
                                                   Color3.fromRGB(170, 0, 0)
        ui.ToggleButtons.AutoPass.Text = scripts.AutoPass.enabled and "ON" or "OFF"
        
        -- Provide feedback
        game.StarterGui:SetCore("SendNotification", {
            Title = "Auto Pass",
            Text = scripts.AutoPass.enabled and "Enabled" or "Disabled",
            Duration = 1
        })
    end
    
    if input.KeyCode == config.BallMagnetKey then
        scripts.BallMagnet.enabled = not scripts.BallMagnet.enabled
        ui.ToggleButtons.BallMagnet.BackgroundColor3 = scripts.BallMagnet.enabled and 
                                                     Color3.fromRGB(0, 170, 0) or 
                                                     Color3.fromRGB(170, 0, 0)
        ui.ToggleButtons.BallMagnet.Text = scripts.BallMagnet.enabled and "ON" or "OFF"
        
        -- Provide feedback
        game.StarterGui:SetCore("SendNotification", {
            Title = "Ball Magnet",
            Text = scripts.BallMagnet.enabled and "Enabled" or "Disabled",
            Duration = 1
        })
    end
end)

-- Create ESP for a player
local function createPlayerESP(targetPlayer)
    if targetPlayer == player then return nil end
    if espObjects[targetPlayer.UserId] then return espObjects[targetPlayer.UserId] end
    
    -- Create a BillboardGui for the ESP
    local espGui = Instance.new("BillboardGui")
    espGui.Name = "ESP_" .. targetPlayer.Name
    espGui.AlwaysOnTop = true
    espGui.Size = UDim2.new(4, 0, 5, 0)
    espGui.StudsOffset = Vector3.new(0, 2, 0)
    espGui.Adornee = nil -- Will be set later
    espGui.Parent = ui.ESPContainer
    
    -- Create box frame
    local boxFrame = Instance.new("Frame")
    boxFrame.Name = "BoxFrame"
    boxFrame.Size = UDim2.new(1, 0, 1, 0)
    boxFrame.BackgroundTransparency = 1
    boxFrame.BorderSizePixel = 0
    boxFrame.Parent = espGui
    
    -- Create box outline
    local boxOutline = Instance.new("UIStroke")
    boxOutline.Thickness = config.ESPBoxThickness
    boxOutline.Color = config.ESPBoxColor
    boxOutline.Transparency = config.ESPBoxTransparency
    boxOutline.Parent = boxFrame
    
    -- Create player name label
    local nameLabel = Instance.new("TextLabel")
    nameLabel.Name = "NameLabel"
    nameLabel.Size = UDim2.new(1, 0, 0.2, 0)
    nameLabel.Position = UDim2.new(0, 0, -0.25, 0)
    nameLabel.BackgroundTransparency = 1
    nameLabel.Text = targetPlayer.Name
    nameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    nameLabel.TextStrokeTransparency = 0
    nameLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    nameLabel.TextSize = 14
    nameLabel.Font = Enum.Font.SourceSansBold
    nameLabel.Parent = espGui
    
    -- Set initial visibility based on ESP toggle
    espGui.Visible = scripts.ESP.enabled
    
    espObjects[targetPlayer.UserId] = {
        Container = espGui,
        Box = boxOutline,
        Name = nameLabel
    }
    
    ret
