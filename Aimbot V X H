if game.Placeid == 17404472220

local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "V X H aimbot",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "Rayfield Interface Suite",
   LoadingSubtitle = "by Sirius",
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "V X H hub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local MainTab = Window:CreateTab("🏡 home", nil) -- Title, Image
local MainSection = MainTab:CreateSection("")     

Rayfield:Notify({
   Title = "Welcome to aimbot hub!!!",
   Content = "good aimbot!",
   Duration = 5,
   Image = nil,
})    

local Button = MainTab:CreateButton({
   Name = "Aimbot",
   Callback = function()
   -- Silent Aim with FOV Circle
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera

local FOV = 100 -- Field of View radius in pixels

local function getClosestTarget()
    local closestPlayer = nil
    local shortestDistance = FOV
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Humanoid") and player.Character.Humanoid.Health > 0 then
            local head = player.Character:FindFirstChild("Head")
            if head then
                local screenPoint, onScreen = Camera:WorldToViewportPoint(head.Position)
                if onScreen then
                    local distance = (Vector2.new(screenPoint.X, screenPoint.Y) - Vector2.new(Mouse.X, Mouse.Y)).magnitude
                    if distance < shortestDistance then
                        shortestDistance = distance
                        closestPlayer = player
                    end
                end
            end
        end
    end
    return closestPlayer
end

-- Draw FOV Circle
local Drawing = Drawing or require(game:GetService("ReplicatedStorage"):WaitForChild("Drawing")) -- fallback if Drawing library is available
local circle = Drawing.new and Drawing.new("Circle") or nil

if circle then
    circle.Visible = true
    circle.Radius = FOV
    circle.Color = Color3.fromRGB(34, 197, 94)
    circle.Thickness = 2
    circle.NumSides = 64
    circle.Filled = false

    RunService.RenderStepped:Connect(function()
        local mousePos = Vector2.new(Mouse.X, Mouse.Y)
        circle.Position = mousePos
    end)
end

local mt = getrawmetatable(game)
local oldNamecall = mt.__namecall
local oldIndex = mt.__index
setreadonly(mt, false)

mt.__namecall = newcclosure(function(self, ...)
    local method = getnamecallmethod()
    if method == "FireServer" and tostring(self) == "HitPart" then
        local args = {...}
        local target = getClosestTarget()
        if target and target.Character and target.Character:FindFirstChild("Head") then
            args[1] = target.Character.Head
            return oldNamecall(self, unpack(args))
        end
    end
    return oldNamecall(self, ...)
end)

setreadonly(mt, true)
print("Silent Aim with FOV Circle loaded successfully!")
   end,
})    
