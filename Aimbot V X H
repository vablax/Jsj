local Players = game:GetService("Players")
local localPlayer = Players.LocalPlayer
local mouse = localPlayer:GetMouse()
local RunService = game:GetService("RunService")

local enabled = false

function getClosestEnemy()
    local closestDistance = math.huge
    local closestPlayer = nil
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= localPlayer and player.Character and player.Character:FindFirstChild("Humanoid") and player.Character.Humanoid.Health > 0 then
            local head = player.Character:FindFirstChild("Head")
            if head then
                local screenPoint, onScreen = workspace.CurrentCamera:WorldToViewportPoint(head.Position)
                if onScreen then
                    local distance = (Vector2.new(screenPoint.X, screenPoint.Y) - Vector2.new(mouse.X, mouse.Y)).magnitude
                    if distance < closestDistance then
                        closestDistance = distance
                        closestPlayer = player
                    end
                end
            end
        end
    end
    return closestPlayer
end

UserInputService.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        enabled = true
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        enabled = false
    end
end)

RunService.RenderStepped:Connect(function()
    if enabled then
        local target = getClosestEnemy()
        if target and target.Character and target.Character:FindFirstChild("Head") then
            local headPos = target.Character.Head.Position
            local ray = Ray.new(workspace.CurrentCamera.CFrame.Position, (headPos - workspace.CurrentCamera.CFrame.Position).unit * 500)
            local part, position = workspace:FindPartOnRay(ray, localPlayer.Character, false, true)
            if part then
                localPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(position)
            end
        end
    end
end)


local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local localPlayer = Players.LocalPlayer

local espFolder = Instance.new("Folder", workspace)
espFolder.Name = "ESPBoxes"

function createBox(player)
    local box = Instance.new("BoxHandleAdornment")
    box.Adornee = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    box.AlwaysOnTop = true
    box.ZIndex = 10
    box.Size = Vector3.new(4, 6, 4)
    box.Color3 = Color3.new(1, 0, 0)
    box.Transparency = 0.5
    box.Parent = espFolder
    return box
end

local boxes = {}

Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function(character)
        wait(1)
        if boxes[player] then
            boxes[player]:Destroy()
            boxes[player] = nil
        end
        if player ~= localPlayer then
            boxes[player] = createBox(player)
        end
    end)
end)

Players.PlayerRemoving:Connect(function(player)
    if boxes[player] then
        boxes[player]:Destroy()
        boxes[player] = nil
    end
end)

RunService.RenderStepped:Connect(function()
    for player, box in pairs(boxes) do
        if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            box.Adornee = player.Character.HumanoidRootPart
            box.Size = Vector3.new(4, 6, 4)
            box.Transparency = 0.5
        else
            box.Adornee = nil
        end
    end
end)
