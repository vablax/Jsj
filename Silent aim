-- AdvancedTargetingSystem.lua
-- An advanced targeting system with cursor-following circle, ESP, and mobile support
-- Place this in StarterPlayerScripts

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local GuiService = game:GetService("GuiService")

local player = Players.LocalPlayer
local camera = workspace.CurrentCamera
local mouse = player:GetMouse()

-- Configuration
local config = {
    Enabled = true,              -- Is the system enabled by default
    ToggleKey = Enum.KeyCode.F,  -- Key to toggle the system on/off (PC)
    MaxDistance = 150,           -- Maximum distance to target
    FieldOfView = 80,            -- Field of view in degrees (how far from center targets can be)
    TeamCheck = true,            -- Check if target is on same team
    VisibilityCheck = true,      -- Check if target is visible (not behind walls)
    TargetPart = "Head",         -- Part to target (Head, HumanoidRootPart, etc.)
    SmoothingFactor = 0.2,       -- How smoothly to track targets (0-1, lower = smoother)
    AssistStrength = 0.8,        -- How strong the assist is (0-1, higher = stronger)
    
    -- Circle reticle settings
    CircleRadius = 25,           -- Size of the targeting circle (increased size)
    CircleThickness = 2,         -- Thickness of the circle line
    DefaultColor = Color3.fromRGB(255, 255, 255), -- Default white circle
    TargetColor = Color3.fromRGB(255, 0, 0),      -- Red when targeting
    CircleTransparency = 0,      -- 0 = fully visible, 1 = invisible
    CircleFilled = false,        -- Whether the circle is filled or just an outline
    PulseEffect = true,          -- Whether the circle should pulse when locked on target
    PulseSpeed = 1,              -- Speed of the pulse effect
    PulseSize = 1.5,             -- Maximum size multiplier for pulse effect
    
    -- Mobile button settings
    MobileButtonSize = UDim2.new(0, 50, 0, 50),    -- Size of the mobile toggle button
    MobileButtonPosition = UDim2.new(0.9, -25, 0.7, -25), -- Position (right side, medium height)
    MobileButtonColor = Color3.fromRGB(200, 200, 200),  -- Button color when off
    MobileButtonActiveColor = Color3.fromRGB(0, 200, 0), -- Button color when on
    MobileButtonTransparency = 0.3,                 -- Button transparency
    MobileButtonIcon = "rbxassetid://6031625146",    -- Target icon (change to any Roblox asset ID)
    
    -- ESP Settings
    ESPEnabled = true,           -- Enable ESP by default
    ESPToggleKey = Enum.KeyCode.E, -- Key to toggle ESP on/off
    ESPBoxColor = Color3.fromRGB(255, 0, 0),    -- Red boxes for enemies
    ESPBoxTransparency = 0.5,    -- Box transparency
    ESPBoxThickness = 2,         -- Box outline thickness
    ESPTextColor = Color3.fromRGB(255, 255, 255), -- White text
    ESPDistance = 500,           -- Maximum distance for ESP to show
    ESPShowHealth = true,        -- Show health bar
    ESPShowName = true,          -- Show player names
    ESPShowDistance = true,      -- Show distance to player
    ESPUpdateRate = 0.1,         -- How often to update ESP (seconds)
}

-- Variables
local targetedPlayer = nil
local isAiming = false
local isTargetingEnabled = config.Enabled
local isESPEnabled = config.ESPEnabled
local isMobile = GuiService:IsTenFootInterface() or UserInputService.TouchEnabled
local espObjects = {}
local lastUpdateTime = 0

-- Create the targeting UI with cursor-following circle
local function createTargetingUI()
    local targetGui = Instance.new("ScreenGui")
    targetGui.Name = "TargetingSystem"
    targetGui.ResetOnSpawn = false
    targetGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    -- Make sure GUI works in Core and PlayerGui
    if syn and syn.protect_gui then
        syn.protect_gui(targetGui)
        targetGui.Parent = game.CoreGui
    else
        targetGui.Parent = player:WaitForChild("PlayerGui")
    end
    
    -- Create the circle reticle (follows cursor)
    local circleFrame = Instance.new("Frame")
    circleFrame.Name = "CircleReticle"
    circleFrame.Size = UDim2.new(0, config.CircleRadius * 2, 0, config.CircleRadius * 2)
    circleFrame.Position = UDim2.new(0.5, -config.CircleRadius, 0.5, -config.CircleRadius)
    circleFrame.AnchorPoint = Vector2.new(0.5, 0.5) -- Center anchor point
    circleFrame.BackgroundTransparency = 1
    circleFrame.Visible = isTargetingEnabled
    circleFrame.Parent = targetGui
    
    -- Create the actual circle using UIStroke (for outline)
    local circleStroke = Instance.new("UIStroke")
    circleStroke.Thickness = config.CircleThickness
    circleStroke.Color = config.DefaultColor
    circleStroke.Transparency = config.CircleTransparency
    circleStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    circleStroke.Parent = circleFrame
    
    -- Create a UICorner to make the frame circular
    local circleCorner = Instance.new("UICorner")
    circleCorner.CornerRadius = UDim.new(1, 0) -- Makes it a perfect circle
    circleCorner.Parent = circleFrame
    
    -- If filled, configure background
    if config.CircleFilled then
        circleFrame.BackgroundColor3 = config.DefaultColor
        circleFrame.BackgroundTransparency = config.CircleTransparency + 0.5 -- Make fill more transparent than outline
    end
    
    -- Create mobile toggle buttons if on mobile/touch device
    local toggleButton, espButton
    if isMobile then
        -- Targeting toggle button
        toggleButton = Instance.new("ImageButton")
        toggleButton.Name = "ToggleButton"
        toggleButton.Size = config.MobileButtonSize
        toggleButton.Position = config.MobileButtonPosition
        toggleButton.AnchorPoint = Vector2.new(0.5, 0.5)
        toggleButton.BackgroundColor3 = isTargetingEnabled and config.MobileButtonActiveColor or config.MobileButtonColor
        toggleButton.BackgroundTransparency = config.MobileButtonTransparency
        toggleButton.Image = config.MobileButtonIcon
        toggleButton.ImageTransparency = 0.1
        toggleButton.Parent = targetGui
        
        -- Add rounded corners to the button
        local buttonCorner = Instance.new("UICorner")
        buttonCorner.CornerRadius = UDim.new(1, 0) -- Makes it a circle
        buttonCorner.Parent = toggleButton
        
        -- Add a UI stroke to make it more visible
        local buttonStroke = Instance.new("UIStroke")
        buttonStroke.Thickness = 2
        buttonStroke.Color = Color3.fromRGB(0, 0, 0)
        buttonStroke.Transparency = 0.3
        buttonStroke.Parent = toggleButton
        
        -- Add text label inside button to show status
        local statusLabel = Instance.new("TextLabel")
        statusLabel.Name = "StatusLabel"
        statusLabel.Size = UDim2.new(1, 0, 0.3, 0)
        statusLabel.Position = UDim2.new(0, 0, 0.85, 0)
        statusLabel.BackgroundTransparency = 1
        statusLabel.Text = isTargetingEnabled and "ON" or "OFF"
        statusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        statusLabel.TextStrokeTransparency = 0
        statusLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
        statusLabel.TextScaled = true
        statusLabel.Font = Enum.Font.GothamBold
        statusLabel.Parent = toggleButton
        
        -- Toggle button click handler
        toggleButton.MouseButton1Click:Connect(function()
            isTargetingEnabled = not isTargetingEnabled
            toggleButton.BackgroundColor3 = isTargetingEnabled and config.MobileButtonActiveColor or config.MobileButtonColor
            statusLabel.Text = isTargetingEnabled and "ON" or "OFF"
            circleFrame.Visible = isTargetingEnabled
            
            -- Provide feedback
            local feedbackText = isTargetingEnabled and "Targeting ON" or "Targeting OFF"
            game.StarterGui:SetCore("SendNotification", {
                Title = "Targeting System",
                Text = feedbackText,
                Duration = 1
            })
        end)
        
        -- ESP toggle button (positioned to the left of the targeting button)
        espButton = Instance.new("ImageButton")
        espButton.Name = "ESPButton"
        espButton.Size = config.MobileButtonSize
        espButton.Position = UDim2.new(config.MobileButtonPosition.X.Scale - 0.1, 
                                       config.MobileButtonPosition.X.Offset, 
                                       config.MobileButtonPosition.Y.Scale,
                                       config.MobileButtonPosition.Y.Offset)
        espButton.AnchorPoint = Vector2.new(0.5, 0.5)
        espButton.BackgroundColor3 = isESPEnabled and config.MobileButtonActiveColor or config.MobileButtonColor
        espButton.BackgroundTransparency = config.MobileButtonTransparency
        espButton.Image = "rbxassetid://3926305904" -- Different icon for ESP
        espButton.ImageRectOffset = Vector2.new(964, 324)
        espButton.ImageRectSize = Vector2.new(36, 36)
        espButton.ImageTransparency = 0.1
        espButton.Parent = targetGui
        
        -- Add rounded corners to the ESP button
        local espButtonCorner = Instance.new("UICorner")
        espButtonCorner.CornerRadius = UDim.new(1, 0) -- Makes it a circle
        espButtonCorner.Parent = espButton
        
        -- Add a UI stroke to make it more visible
        local espButtonStroke = Instance.new("UIStroke")
        espButtonStroke.Thickness = 2
        espButtonStroke.Color = Color3.fromRGB(0, 0, 0)
        espButtonStroke.Transparency = 0.3
        espButtonStroke.Parent = espButton
        
        -- Add text label inside button to show status
        local espStatusLabel = Instance.new("TextLabel")
        espStatusLabel.Name = "StatusLabel"
        espStatusLabel.Size = UDim2.new(1, 0, 0.3, 0)
        espStatusLabel.Position = UDim2.new(0, 0, 0.85, 0)
        espStatusLabel.BackgroundTransparency = 1
        espStatusLabel.Text = isESPEnabled and "ESP" or "ESP"
        espStatusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        espStatusLabel.TextStrokeTransparency = 0
        espStatusLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
        espStatusLabel.TextScaled = true
        espStatusLabel.Font = Enum.Font.GothamBold
        espStatusLabel.Parent = espButton
        
        -- ESP button click handler
        espButton.MouseButton1Click:Connect(function()
            isESPEnabled = not isESPEnabled
            espButton.BackgroundColor3 = isESPEnabled and config.MobileButtonActiveColor or config.MobileButtonColor
            
            -- Toggle ESP visibility
            for _, espData in pairs(espObjects) do
                if espData.Container then
                    espData.Container.Visible = isESPEnabled
                end
            end
            
            -- Provide feedback
            local feedbackText = isESPEnabled and "ESP ON" or "ESP OFF"
            game.StarterGui:SetCore("SendNotification", {
                Title = "ESP System",
                Text = feedbackText,
                Duration = 1
            })
        end)
    end
    
    -- Create an ESP container for all ESP elements
    local espContainer = Instance.new("Folder")
    espContainer.Name = "ESPContainer"
    espContainer.Parent = targetGui
    
    return {
        TargetGui = targetGui,
        CircleFrame = circleFrame,
        CircleStroke = circleStroke,
        ToggleButton = toggleButton,
        ESPButton = espButton,
        ESPContainer = espContainer
    }
end

-- Create UI elements
local ui = createTargetingUI()

-- Create ESP for a player
local function createPlayerESP(targetPlayer)
    if targetPlayer == player then return nil end
    if espObjects[targetPlayer.UserId] then return espObjects[targetPlayer.UserId] end
    
    -- Create a BillboardGui for the ESP
    local espGui = Instance.new("BillboardGui")
    espGui.Name = "ESP_" .. targetPlayer.Name
    espGui.AlwaysOnTop = true
    espGui.Size = UDim2.new(4, 0, 5, 0)
    espGui.StudsOffset = Vector3.new(0, 2, 0)
    espGui.Adornee = nil -- Will be set later
    espGui.Parent = ui.ESPContainer
    
    -- Create box frame
    local boxFrame = Instance.new("Frame")
    boxFrame.Name = "BoxFrame"
    boxFrame.Size = UDim2.new(1, 0, 1, 0)
    boxFrame.BackgroundTransparency = 1
    boxFrame.BorderSizePixel = 0
    boxFrame.Parent = espGui
    
    -- Create box outline
    local boxOutline = Instance.new("UIStroke")
    boxOutline.Thickness = config.ESPBoxThickness
    boxOutline.Color = config.ESPBoxColor
    boxOutline.Transparency = config.ESPBoxTransparency
    boxOutline.Parent = boxFrame
    
    -- Create player name label
    local nameLabel = Instance.new("TextLabel")
    nameLabel.Name = "NameLabel"
    nameLabel.Size = UDim2.new(1, 0, 0.2, 0)
    nameLabel.Position = UDim2.new(0, 0, -0.25, 0)
    nameLabel.BackgroundTransparency = 1
    nameLabel.Text = targetPlayer.Name
    nameLabel.TextColor3 = config.ESPTextColor
    nameLabel.TextStrokeTransparency = 0
    nameLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    nameLabel.TextSize = 14
    nameLabel.Font = Enum.Font.SourceSansBold
    nameLabel.Parent = espGui
    
    -- Create distance label
    local distanceLabel = Instance.new("TextLabel")
    distanceLabel.Name = "DistanceLabel"
    distanceLabel.Size = UDim2.new(1, 0, 0.2, 0)
    distanceLabel.Position = UDim2.new(0, 0, 1, 0)
    distanceLabel.BackgroundTransparency = 1
    distanceLabel.Text = "0m"
    distanceLabel.TextColor3 = config.ESPTextColor
    distanceLabel.TextStrokeTransparency = 0
    distanceLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    distanceLabel.TextSize = 14
    distanceLabel.Font = Enum.Font.SourceSansBold
    distanceLabel.Parent = espGui
    
    -- Create health bar background
    local healthBarBG = Instance.new("Frame")
    healthBarBG.Name = "HealthBarBG"
    healthBarBG.Size = UDim2.new(0.8, 0, 0.1, 0)
    healthBarBG.Position = UDim2.new(0.1, 0, 1.05, 0)
    healthBarBG.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    healthBarBG.BorderSizePixel = 0
    healthBarBG.Parent = espGui
    
    -- Create health bar fill
    local healthBarFill = Instance.new("Frame")
    healthBarFill.Name = "HealthBarFill"
    healthBarFill.Size = UDim2.new(1, 0, 1, 0)
    healthBarFill.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    healthBarFill.BorderSizePixel = 0
    healthBarFill.Parent = healthBarBG
    
    -- Set initial visibility based on ESP toggle
    espGui.Visible = isESPEnabled
    
    espObjects[targetPlayer.UserId] = {
        Container = espGui,
        Box = boxOutline,
        Name = nameLabel,
        Distance = distanceLabel,
        HealthBG = healthBarBG,
        HealthFill = healthBarFill
    }
    
    return espObjects[targetPlayer.UserId]
end

-- Update ESP for all players
local function updateESP()
    if not isESPEnabled then return end
    
    -- Only update at the configured rate
    local currentTime = tick()
    if currentTime - lastUpdateTime < config.ESPUpdateRate then return end
    lastUpdateTime = currentTime
    
    local myCharacter = player.Character
    if not myCharacter or not myCharacter:FindFirstChild("HumanoidRootPart") then return end
    
    local myPosition = myCharacter.HumanoidRootPart.Position
    
    for _, targetPlayer in pairs(Players:GetPlayers()) do
        if targetPlayer ~= player then
            local character = targetPlayer.Character
            if character and character:FindFirstChild("HumanoidRootPart") and character:FindFirstChild("Humanoid") then
                -- Create ESP if it doesn't exist
                local espData = espObjects[targetPlayer.UserId] or createPlayerESP(targetPlayer)
                if not espData then continue end
                
                -- Calculate distance
                local targetPosition = character.HumanoidRootPart.Position
                local distance = (targetPosition - myPosition).Magnitude
                
                -- Check if within ESP distance
                if distance <= config.ESPDistance then
                    -- Update adornee
                    espData.Container.Adornee = character.HumanoidRootPart
                    
                    -- Update distance text
                    espData.Distance.Text = math.floor(distance) .. "m"
                    
                    -- Update health
                    local health = character.Humanoid.Health
                    local maxHealth = character.Humanoid.MaxHealth
                    local healthRatio = health / maxHealth
                    
                    espData.HealthFill.Size = UDim2.new(healthRatio, 0, 1, 0)
                    
                    -- Color health based on percentage
                    if healthRatio > 0.5 then
                        -- Green to yellow
                        local lerpValue = (healthRatio - 0.5) * 2
                        espData.HealthFill.BackgroundColor3 = Color3.new(2 - 2 * lerpValue, 1, 0)
                    else
                        -- Yellow to red
                        local lerpValue = healthRatio * 2
                        espData.HealthFill.BackgroundColor3 = Color3.new(1, lerpValue, 0)
                    end
                    
                    -- Set box color based on team
                    if config.TeamCheck and targetPlayer.Team == player.Team then
                        espData.Box.Color = Color3.fromRGB(0, 255, 0) -- Green for teammates
                    else
                        espData.Box.Color = config.ESPBoxColor -- Default color for enemies
                    end
                    
                    -- Show ESP elements based on configuration
                    espData.Name.Visible = config.ESPShowName
                    espData.Distance.Visible = config.ESPShowDistance
                    espData.HealthBG.Visible = config.ESPShowHealth
                    
                    -- Show if ESP is enabled
                    espData.Container.Visible = isESPEnabled
                else
                    -- Hide if too far
                    espData.Container.Visible = false
                end
            else
                -- Character not found, hide ESP
                if espObjects[targetPlayer.UserId] and espObjects[targetPlayer.UserId].Container then
                    espObjects[targetPlayer.UserId].Container.Visible = false
                end
            end
        end
    end
end

-- Toggle system on key press (for PC)
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    
    -- Toggle targeting with keyboard (for PC)
    if input.KeyCode == config.ToggleKey then
        isTargetingEnabled = not isTargetingEnabled
        ui.CircleFrame.Visible = isTargetingEnabled
        
        -- Update button visuals if on mobile
        if ui.ToggleButton then
            ui.ToggleButton.BackgroundColor3 = isTargetingEnabled and config.MobileButtonActiveColor or config.MobileButtonColor
            ui.ToggleButton:FindFirstChild("StatusLabel").Text = isTargetingEnabled and "ON" or "OFF"
        end
        
        -- Provide feedback
        game.StarterGui:SetCore("SendNotification", {
            Title = "Targeting System",
            Text = isTargetingEnabled and "Targeting ON" or "Targeting OFF",
            Duration = 1
        })
    end
    
    -- Toggle ESP with keyboard (for PC)
    if input.KeyCode == config.ESPToggleKey then
        isESPEnabled = not isESPEnabled
        
        -- Update button visuals if on mobile
        if ui.ESPButton then
            ui.ESPButton.BackgroundColor3 = isESPEnabled and config.MobileButtonActiveColor or config.MobileButtonColor
        end
        
        -- Toggle ESP visibility
        for _, espData in pairs(espObjects) do
            if espData.Container then
                espData.Container.Visible = isESPEnabled
            end
        end
        
      
